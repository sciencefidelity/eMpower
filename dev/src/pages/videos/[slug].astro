---
import sanityClient from "../../lib/sanityClient"
import { buildUrl } from "../../lib/utils"
import BaseLayout from "../../layouts/BaseLayout.astro"
import PortableText from "../../components/PortableText"
import { components } from "../../components/PortableTextComponents"
import VideoComponent from "../../components/VideoComponent.astro"
import { videoQuery } from "../../lib/queries"
import { Video } from "../../lib/interfaces"

export async function getStaticPaths() {
  const data: { videos: Video[] } = await sanityClient
    .fetch(videoQuery)
    .then(response => response)
  return data.videos.map(video => {
    return {
      params: { slug: video.slug },
      props: { video }
    }
  })
}
const { slug } = Astro.request.params
const { video } = Astro.props as { video: Video }
const {
  body,
  introduction,
  section,
  seoDescription,
  seoKeywords,
  seoTitle,
  title,
  videoLink
} = video
---
<BaseLayout
  title={title}
  seoDescription={seoDescription}
  keywords={seoKeywords}
  seoTitle={seoTitle}
  slug={slug}
>
  <div>
    <h2>{title}</h2>
    <p>{introduction}</p>
    <p>in:{" "}
      <a href={buildUrl(section._type, section.slug)}>
        {section.title}
      </a>
    </p>
    {videoLink && <VideoComponent video={video} />}
    {body && <PortableText value={body} components={components} />}
  </div>
</BaseLayout>

<style lang="scss">
li {
  display: inline;
  &:not(:last-child)::after {
    content: ', ';
  }
}
</style>
