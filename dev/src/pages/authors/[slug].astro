---
import format from "date-fns/format"
import sanityClient from "../../lib/sanityClient.ts"
import { buildUrl, twitterLink } from "../../lib/utils.ts"
import BaseLayout from "../../layouts/BaseLayout.astro"
import PortableText from "../../components/PortableText.svelte"
import { authorQuery } from "../../lib/queries"
// import type { AuthorData } from "../../lib/interfaces.ts"
import { Author, Post } from "../../generated/schema"

export interface AuthorPosts extends Author {
  posts: Post[]
  slugCurrent: string
}
export interface Data {
  authors: AuthorPosts[]
  slugCurrent: string
}

export async function getStaticPaths( ) {
  const data: Data = await sanityClient.fetch(authorQuery)
    .then((response: any) => response)
  return data.authors.map(author => {
    return {
      params: { slug: author.slugCurrent },
      props: { author }
    }
  })
}

const { slug } = Astro.request.params
const { author } = Astro.props
const {
  _type,
  bio,
  name,
  posts,
  slugCurrent,
  twitterHandle
} = author as AuthorPosts
const title = `Author: ${name}`
---
<BaseLayout title={title}>
  <div>
    <h2>{title}</h2>
    {twitterHandle && <p>
      <a
        href={twitterLink(twitterHandle)}
        target="_blank"
        rel="noreferrer">{twitterHandle}</a>
    </p>}
    <h2>Bio</h2>
    <PortableText body={bio} />
    <br>
    <h2>Posts</h2>
    <ul>
      {posts.map(post =>
        <li>
          <a href={buildUrl(_type, slugCurrent)}>{post.title}</a><br>
          {format(new Date(post.publishedAt), "eeee, do MMMM yyyy")}
        </li>
      )}
    </ul>
    <br>
    <p><a href="/authors">All authors</a></p>
  </div>
</BaseLayout>
