---
import { Markdown } from "astro/components"
import groq from "groq"
import sanityClient from "lib/sanityClient"
import BaseLayout from "layouts/BaseLayout.astro"
import { dateOptions, kebabCase } from "lib/utils"

export async function getStaticPaths() {
  const query = groq`{
    "posts": *[_type == "post"]{
      _id,
      author->{name, "slug": slug.current},
      body,
      categories[]->{_id, "slug": slug.current, title},
      publishedAt,
      "slug": slug.current,
      title
    }
  }`
  const data = await sanityClient.fetch(query).then(response => response)
  return data.posts.map(post => {
    return {
      params: { slug: post.slug },
      props: { post }
    }
  })
}
const { slug } = Astro.request.params
const { post } = Astro.props
const date = new Date(post.publishedAt).toLocaleDateString("en-GB", dateOptions)
---
<BaseLayout
  title={post.title}
  seoDescription={post.seoDescription}
  keywords={post.seoKeywords}
  seoTitle={post.seoTitle}
  slug={post.slug}
  twitterHandle={post.author.twitterHandle}
>
  <div>
    <h1>{post.title}</h1>
    <p>published on: {date}</p>
    {post.author && <p>by:
      <a href="/authors/${post.author.slug}">{post.author.name}</a>
    </p>}
    {post.categories && <ul>
      in: {post.categories.map(category =>
        <li><a href="/categories/${category.slug}">{category.title}</a></li>
      )}
    </ul>}
    {post.body && <Markdown>{post.body}</Markdown>}
  </div>
</BaseLayout>

<style lang="scss">
li {
  display: inline;
  &:not(:last-child)::after {
    content: ', ';
  }
}
</style>
