---
import format from "date-fns/format"
import sanityClient from "lib/sanityClient"
import { article, buildUrl, twitterLink } from "lib/utils"
import { components } from "components/PortableTextComponents.tsx"
import BaseLayout from "layouts/BaseLayout.astro"
import CommentForm from "../../components/CommentForm.svelte"
import PortableText from "components/PortableText.tsx"
import { postsQuery } from "lib/queries"

export async function getStaticPaths() {
  const data = await sanityClient.fetch(postsQuery).then(response => response)
  return data.posts.map(post => {
    return {
      params: { slug: post.slug },
      props: { post }
    }
  })
}
const { slug } = Astro.request.params
const { post } = Astro.props
---
<BaseLayout
  title={post.title}
  seoDescription={post.seoDescription}
  keywords={post.seoKeywords}
  seoTitle={post.seoTitle}
  slug={post.slug}
  twitterHandle={post.author.twitterHandle}
>
  <section>
    {post.title && <h1 class="title text-white serif bold">{post.title}</h1>}
    published on: {format(new Date(post.publishedAt), "eeee, do MMMM yyyy")}
    {"by: "}<br>
    <a href={buildUrl(post.author._type, post.author.slug)}>
      {post.author.name}
    </a>
    </p>
    {post.categories && <ul>
      {"in: "}{post.categories.map(category =>
        <li>
          <a href={buildUrl(category._type, category.slug)}>
            {category.title}
          </a>
        </li>
      )}
    </ul>}
    <div class="body">
      {post.body && <PortableText body={post.body} components={components} />}
      {post.author && <p>
        {post.author.twitterHandle
          ? <a
              href={twitterLink(post.author.twitterHandle)}
              target="_blank"
              rel="noreferrer"
            >{post.author.name}</a> : {post.author.name}}{" is "}
        {article(post.author.occupation)}{" "}{post.author.occupation}
      </p>}
    </div>
    <CommentForm client:idle id={post._id} />
    {post.comments.map(comment =>
      <p>{comment.message}</p>
      <p>by {comment.name} on {
        format(new Date(comment._createdAt), "eeee, do MMMM yyyy")
      }</p>
    )}
  </section>
</BaseLayout>

<style lang="scss">
li {
  display: inline;
  &:not(:last-child)::after {
    content: ', ';
  }
}

.title {
  font-size: 7rem;
  margin-bottom: 4rem;
}

.body {
  margin-top: 7rem;
}
</style>
